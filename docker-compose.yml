version: "3.7"

services:
  client:
    container_name: client_container
    # command: tail -f /dev/null # DEBUG: uncomment to keep container running
    depends_on:
      - application
    build:
      dockerfile: Dockerfile
      context: ./frontend
      args:
        - REACT_APP_API_BASE_URL=$API_BASE_URL
    volumes:
      - ./frontend:/app/frontend
    networks:
      - frontend-network

  # Nginx Reserse Proxy
  nginx:
    image: nginx:alpine
    container_name: nginx
    # command: tail -f /dev/null # DEBUG: uncomment to keep container running
    depends_on:
      - client
      - application
    ports:
      - 80:80
    volumes:
      - ./nginx/config:/etc/nginx
      - ./nginx/certs:/etc/ssl/private
    networks:
      - backend-network
      - frontend-network

  database:
    image: mysql
    container_name: db_container
    environment:
      - MYSQL_DATABASE=cbums
      - MYSQL_ROOT_HOST=%
      - MYSQL_ROOT_PASSWORD=1234
    command: ['--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci']
    cap_add:
      - SYS_NICE
    volumes:
      - "./database/spring_social/:/var/lib/mysql"
    ports:
      - "3306:3306"
    networks:
      - backend-network

  application:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8080"
    container_name: application_container
    restart: always
    depends_on:
      - database
    networks:
      - backend-network
      - frontend-network

networks:
  backend-network:
  frontend-network: