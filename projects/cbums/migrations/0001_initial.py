# Generated by Django 3.1.3 on 2021-06-24 14:47

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='TbBoard',
            fields=[
                ('board_name', models.CharField(max_length=45, primary_key=True, serialize=False)),
                ('board_production_dt', models.DateTimeField()),
            ],
            options={
                'db_table': 'TB_board',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbBook',
            fields=[
                ('isbn', models.IntegerField(primary_key=True, serialize=False)),
                ('book_name', models.CharField(max_length=45)),
                ('book_rg_dt', models.DateTimeField()),
            ],
            options={
                'db_table': 'TB_book',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbComment',
            fields=[
                ('comment_seq', models.AutoField(primary_key=True, serialize=False)),
                ('comment_content', models.CharField(max_length=3000)),
                ('comment_likes_count', models.IntegerField()),
                ('comment_rg_dt', models.DateTimeField()),
            ],
            options={
                'db_table': 'TB_comment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbForm',
            fields=[
                ('form_seq', models.AutoField(primary_key=True, serialize=False)),
                ('form_title', models.CharField(max_length=45)),
                ('form_introduce', models.CharField(blank=True, max_length=1500, null=True)),
                ('form_start_dt', models.DateTimeField()),
                ('form_end_dt', models.DateTimeField()),
                ('rg_no', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'TB_form',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbFormAnswer',
            fields=[
                ('form_seq', models.IntegerField(primary_key=True, serialize=False)),
                ('question_seq', models.IntegerField()),
                ('form_writer', models.CharField(max_length=40)),
                ('answer_content', models.CharField(max_length=6000)),
            ],
            options={
                'db_table': 'TB_form_answer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbFormQuestion',
            fields=[
                ('question_seq', models.AutoField(primary_key=True, serialize=False)),
                ('question_content', models.CharField(max_length=100)),
                ('producer_dt', models.DateTimeField()),
            ],
            options={
                'db_table': 'TB_form_question',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbMember',
            fields=[
                ('m_email', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('password', models.CharField(max_length=64)),
                ('m_name', models.CharField(max_length=12)),
                ('m_rg_no', models.IntegerField(blank=True, null=True)),
                ('class_no', models.IntegerField()),
                ('department', models.CharField(max_length=15)),
                ('m_image', models.CharField(blank=True, max_length=45, null=True)),
                ('sysop_status', models.IntegerField()),
            ],
            options={
                'db_table': 'TB_member',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbPost',
            fields=[
                ('post_seq', models.AutoField(primary_key=True, serialize=False)),
                ('post_title', models.CharField(max_length=150)),
                ('post_content', models.CharField(max_length=9000)),
                ('post_image', models.CharField(blank=True, max_length=45, null=True)),
                ('post_rg_dt', models.DateTimeField()),
                ('post_likes_count', models.IntegerField()),
                ('post_visits_count', models.IntegerField()),
            ],
            options={
                'db_table': 'TB_post',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbProject',
            fields=[
                ('p_seq', models.AutoField(primary_key=True, serialize=False)),
                ('p_name', models.CharField(max_length=45)),
                ('p_rg_dt', models.DateTimeField()),
                ('maximum_m', models.IntegerField(blank=True, null=True)),
                ('producer_hidden', models.IntegerField()),
                ('project_image', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'TB_project',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbTag',
            fields=[
                ('tag_name', models.CharField(max_length=24, primary_key=True, serialize=False)),
                ('tag_production_dt', models.DateTimeField()),
            ],
            options={
                'db_table': 'TB_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbBoardSubscription',
            fields=[
                ('board_name', models.OneToOneField(db_column='board_name', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='cbums.tbboard')),
                ('subscription_dt', models.DateTimeField()),
            ],
            options={
                'db_table': 'TB_board_subscription',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbBookTag',
            fields=[
                ('isbn', models.OneToOneField(db_column='isbn', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='cbums.tbbook')),
            ],
            options={
                'db_table': 'TB_book_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbFormContent',
            fields=[
                ('form_seq', models.OneToOneField(db_column='form_seq', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='cbums.tbform')),
            ],
            options={
                'db_table': 'TB_form_content',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbMemberTag',
            fields=[
                ('m_email', models.OneToOneField(db_column='m_email', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='cbums.tbmember')),
            ],
            options={
                'db_table': 'TB_member_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbPostTag',
            fields=[
                ('post_seq', models.OneToOneField(db_column='post_seq', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='cbums.tbpost')),
            ],
            options={
                'db_table': 'TB_post_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbProjectMember',
            fields=[
                ('p_seq', models.OneToOneField(db_column='p_seq', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='cbums.tbproject')),
                ('m_role', models.CharField(blank=True, max_length=30, null=True)),
                ('sign_up_dt', models.DateTimeField()),
                ('sign_up_status', models.IntegerField()),
            ],
            options={
                'db_table': 'TB_project_member',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbProjectPlan',
            fields=[
                ('p_seq', models.OneToOneField(db_column='p_seq', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='cbums.tbproject')),
                ('plan_date', models.DateField()),
                ('plan_content', models.CharField(max_length=100)),
                ('homework', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'TB_project_plan',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbProjectProgress',
            fields=[
                ('p_seq', models.OneToOneField(db_column='p_seq', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='cbums.tbproject')),
                ('progress_date', models.DateField()),
                ('progress_content', models.CharField(max_length=6000)),
                ('homework', models.CharField(blank=True, max_length=100, null=True)),
                ('progress_image', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'TB_project_progress',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbProjectTag',
            fields=[
                ('p_seq', models.OneToOneField(db_column='p_seq', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='cbums.tbproject')),
            ],
            options={
                'db_table': 'TB_project_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbProjectParticipation',
            fields=[
                ('p_seq', models.OneToOneField(db_column='p_seq', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='cbums.tbprojectprogress')),
                ('attend_status', models.IntegerField()),
                ('homework_submit_status', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'TB_project_participation',
                'managed': False,
            },
        ),
    ]
